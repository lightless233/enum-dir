name: Build Project
on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1


jobs:
  build-cross:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - i686-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          # - aarch64-apple-darwin
          # - x86_64-apple-darwin
          # - armv7-unknown-linux-musleabihf
          # - armv7-unknown-linux-gnueabihf
          # - arm-unknown-linux-gnueabi
          # - arm-unknown-linux-gnueabihf
          # - arm-unknown-linux-musleabi
          # - arm-unknown-linux-musleabihf
          # - aarch64-unknown-linux-gnu
          # - aarch64-unknown-linux-musl
          # - mips-unknown-linux-musl
          # - mips-unknown-linux-gnu
          # - mipsel-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          bash ./build/build.sh ${{ matrix.target }}
      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build_tmp/*
          prerelease: ${{ contains(github.ref, '-') }}

  build-macos:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_EXTRA_FEATURES: "local-redir local-tun armv8 neon"
      RUST_BACKTRACE: full
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [macos-latest]
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2

      - name: Install GNU tar
        if: runner.os == 'macOS'
        run: |
          brew install gnu-tar
          # echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true
      
      - if: ${{ matrix.target }} == 'aarch64-apple-darwin'
        run: |
          sudo xcode-select -s /Applications/Xcode_12.4.app &&
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*

      - name: Build release
        run: bash build/build-macos.sh ${{ matrix.target }}

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build_tmp/*
          prerelease: ${{ contains(github.ref, '-') }}